Note 本文档记录了android开发中偶尔要看的备忘。

android layout的一些注意事项
 1. 最常用的布局是LinearLayout,RelativeLayout和FrameLayout
2. gravity属性对于LinearLayout和RelativeLayout有效，对FrameLayout无效
3. layout_gravity属性对于FrameLayout有效，对于LinearLayout内部元素部分有效（和orientation有关，如果是vertical，则top和bottom无效，反之，则left和right无效），对于RelativeLayout内部元素无效
4. LinearLayout中的layout_weight属性，由于这个属性有点诡异，如果想正常的发挥作用，其layout_width（orientation=horizontal）或者layout_height(orientation=vertical)最好设成0dp
5. margin这个属性，不是上下左右都一定能生效的，一般来说，左上角的margin能生效，右下角的margin就未必了
6.LinearLayout中元素无法直接覆盖，把margin设成负值可以覆盖。
7.RelativeLayout和FrameLayout默认都是从左上角开始一层一层的叠上去的，如果上层不设背景或者背景透明的话，下层的东西还是可以可见并且可以点击的，即使看不见了，下层的东西也还是可以被点击到并触发其点击事件


android 使用Monkey进行压力测试。

SDK
 1:使用友盟进行apk的自动更新
 2:使用shareSDK进行社会化分享
 3:使用极光做推送
 4：使用

libs
1：一款漂亮实用的Android开源日期控件timessquare
2:推荐一个Android开发懒人库 -- ButterKnife
3: Android图表引擎AChartEngine

 1:Fragment  transaction.replace() VS transaction.add() hide() show()
 Fragment销毁时replace和add两个方法的区别 http://m.blog.csdn.net/blog/shimiso/44677007#
 那么最合适的处理方式是这样的：
 在add的时候，加上一个tab参数transaction.add(R.id.content, IndexFragment,”Tab1″);
 然后当IndexFragment引用被回收置空的话，先通过IndexFragment＝FragmentManager.findFragmentByTag(“Tab1″);
 找到对应的引用，然后继续上面的hide,show;

 2:TextView,Button,EditText 如果要做到按下去有变化，请使用selector
 点击父布局 使子控件（TextView等）响应点击效果 （子控件中加上这个属性 duplicateParentState）。
 例如：组件RelativeLayout上有两个TextView，这两个TextView具有不同的颜色值，现在要的效果是，当RelativeLayout被点击时，整个item有高亮背景。
 同时这两个TextView要变色。就是父控件响应点击事件，子View不响应点击事件，但是颜色要随着点击而发生变化。这样就用到了属性duplicateParentState。
 android:duplicateParentState，如果设置此属性，将直接从父容器中获取绘图状态（光标，按下等）。
 注意仅仅是获取绘图状态，而没有获取事件，也就是你点一下LinearLayout时Button有被点击的效果，但是不执行点击事件。
 在TextView中设置字体颜色一般使用，android:textColor="@color/red"，但是我们在使用selector动态修改字体颜色的时候要使用android:color="@color/red"。
 代码来设置textColor 的，需要用 textView.setTextColor(getResources().getColorStateList(R.color.text_selector_color));来设置。

 3:ListView
 --ListView记得把layout_height属性设置成match_parent。若设置成"wrap_content"则会调用多次。
 --cacheColorHint="#00000000" 自定义listview的时候，不使用#00000000会出现选中一个空间黑色底色的情况.
 --当不使用android:listSelector属性，默认会显示选中的item为橙黄底色
 ---如果你的自定义ListViewItem中有Button或者Checkable的子类控件的话，那么默认focus是交给了子控件，而ListView的Item能被选中的基础是它能获取Focus，
 也就是说我们可以通过将ListView中Item中包含的所有控件的focusable属性设置为false，这样的话ListView的Item自动获得了Focus的权限，也就可以被选中了.
 或者父控件 设置android:descendantFocusability="blocksDescendants"

 4:坐标
 坐标原点是左上角.
 getRowX：触摸点相对于屏幕的坐标
 getX： 触摸点相对于按钮的坐标
 getTop： 按钮左上角相对于父view（LinerLayout）的y坐标
 getLeft： 按钮左上角相对于父view（LinerLayout）的x坐标